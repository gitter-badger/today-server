#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:twisted
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from today import TodayInternalApiService
from today.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  int post_create(int user_id, string text)'
  print '  Post post_get(int user_id, int post_id)'
  print '   post_list(int user_id)'
  print '  bool post_delete(int user_id, int post_id)'
  print '  int comment_create(int user_id, int post_id)'
  print '   comment_list(int user_id, int post_id)'
  print '  bool comment_delete(int user_id, int post_id, int comment_id)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = TodayInternalApiService.Client(protocol)
transport.open()

if cmd == 'post_create':
  if len(args) != 2:
    print 'post_create requires 2 args'
    sys.exit(1)
  pp.pprint(client.post_create(eval(args[0]),args[1],))

elif cmd == 'post_get':
  if len(args) != 2:
    print 'post_get requires 2 args'
    sys.exit(1)
  pp.pprint(client.post_get(eval(args[0]),eval(args[1]),))

elif cmd == 'post_list':
  if len(args) != 1:
    print 'post_list requires 1 args'
    sys.exit(1)
  pp.pprint(client.post_list(eval(args[0]),))

elif cmd == 'post_delete':
  if len(args) != 2:
    print 'post_delete requires 2 args'
    sys.exit(1)
  pp.pprint(client.post_delete(eval(args[0]),eval(args[1]),))

elif cmd == 'comment_create':
  if len(args) != 2:
    print 'comment_create requires 2 args'
    sys.exit(1)
  pp.pprint(client.comment_create(eval(args[0]),eval(args[1]),))

elif cmd == 'comment_list':
  if len(args) != 2:
    print 'comment_list requires 2 args'
    sys.exit(1)
  pp.pprint(client.comment_list(eval(args[0]),eval(args[1]),))

elif cmd == 'comment_delete':
  if len(args) != 3:
    print 'comment_delete requires 3 args'
    sys.exit(1)
  pp.pprint(client.comment_delete(eval(args[0]),eval(args[1]),eval(args[2]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
